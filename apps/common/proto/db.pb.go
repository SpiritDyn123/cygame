// Code generated by protoc-gen-go. DO NOT EDIT.
// source: db.proto

package ProtoMsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EmDBEngin int32

const (
	EmDBEngin_DB_engine_invalid EmDBEngin = 0
	EmDBEngin_DB_engine_redis   EmDBEngin = 1
	EmDBEngin_DB_engine_mysql   EmDBEngin = 2
)

var EmDBEngin_name = map[int32]string{
	0: "DB_engine_invalid",
	1: "DB_engine_redis",
	2: "DB_engine_mysql",
}
var EmDBEngin_value = map[string]int32{
	"DB_engine_invalid": 0,
	"DB_engine_redis":   1,
	"DB_engine_mysql":   2,
}

func (x EmDBEngin) String() string {
	return proto.EnumName(EmDBEngin_name, int32(x))
}
func (EmDBEngin) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

// SVR_MSG_REGISTER_DB
type PbSvrRegisterDBReqMsg struct {
	SvrInfo *PbSvrBaseInfo `protobuf:"bytes,1,opt,name=svr_info,json=svrInfo" json:"svr_info,omitempty"`
}

func (m *PbSvrRegisterDBReqMsg) Reset()                    { *m = PbSvrRegisterDBReqMsg{} }
func (m *PbSvrRegisterDBReqMsg) String() string            { return proto.CompactTextString(m) }
func (*PbSvrRegisterDBReqMsg) ProtoMessage()               {}
func (*PbSvrRegisterDBReqMsg) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *PbSvrRegisterDBReqMsg) GetSvrInfo() *PbSvrBaseInfo {
	if m != nil {
		return m.SvrInfo
	}
	return nil
}

type PbSvrRegisterDBResMsg struct {
	Ret *Ret `protobuf:"bytes,1,opt,name=ret" json:"ret,omitempty"`
}

func (m *PbSvrRegisterDBResMsg) Reset()                    { *m = PbSvrRegisterDBResMsg{} }
func (m *PbSvrRegisterDBResMsg) String() string            { return proto.CompactTextString(m) }
func (*PbSvrRegisterDBResMsg) ProtoMessage()               {}
func (*PbSvrRegisterDBResMsg) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *PbSvrRegisterDBResMsg) GetRet() *Ret {
	if m != nil {
		return m.Ret
	}
	return nil
}

type PbSvrDBServiceReqMsg struct {
	DbEngine   EmDBEngin `protobuf:"varint,1,opt,name=db_engine,json=dbEngine,enum=ProtoMsg.EmDBEngin" json:"db_engine,omitempty"`
	ReqMsgName string    `protobuf:"bytes,2,opt,name=req_msg_name,json=reqMsgName" json:"req_msg_name,omitempty"`
	ReqData    string    `protobuf:"bytes,3,opt,name=req_data,json=reqData" json:"req_data,omitempty"`
	ResMsgName string    `protobuf:"bytes,4,opt,name=res_msg_name,json=resMsgName" json:"res_msg_name,omitempty"`
}

func (m *PbSvrDBServiceReqMsg) Reset()                    { *m = PbSvrDBServiceReqMsg{} }
func (m *PbSvrDBServiceReqMsg) String() string            { return proto.CompactTextString(m) }
func (*PbSvrDBServiceReqMsg) ProtoMessage()               {}
func (*PbSvrDBServiceReqMsg) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *PbSvrDBServiceReqMsg) GetDbEngine() EmDBEngin {
	if m != nil {
		return m.DbEngine
	}
	return EmDBEngin_DB_engine_invalid
}

func (m *PbSvrDBServiceReqMsg) GetReqMsgName() string {
	if m != nil {
		return m.ReqMsgName
	}
	return ""
}

func (m *PbSvrDBServiceReqMsg) GetReqData() string {
	if m != nil {
		return m.ReqData
	}
	return ""
}

func (m *PbSvrDBServiceReqMsg) GetResMsgName() string {
	if m != nil {
		return m.ResMsgName
	}
	return ""
}

type PbSvrDBServiceResMsg struct {
	Ret        *Ret      `protobuf:"bytes,1,opt,name=ret" json:"ret,omitempty"`
	DbEngine   EmDBEngin `protobuf:"varint,2,opt,name=db_engine,json=dbEngine,enum=ProtoMsg.EmDBEngin" json:"db_engine,omitempty"`
	ResMsgName string    `protobuf:"bytes,3,opt,name=res_msg_name,json=resMsgName" json:"res_msg_name,omitempty"`
	ResData    string    `protobuf:"bytes,4,opt,name=res_data,json=resData" json:"res_data,omitempty"`
}

func (m *PbSvrDBServiceResMsg) Reset()                    { *m = PbSvrDBServiceResMsg{} }
func (m *PbSvrDBServiceResMsg) String() string            { return proto.CompactTextString(m) }
func (*PbSvrDBServiceResMsg) ProtoMessage()               {}
func (*PbSvrDBServiceResMsg) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *PbSvrDBServiceResMsg) GetRet() *Ret {
	if m != nil {
		return m.Ret
	}
	return nil
}

func (m *PbSvrDBServiceResMsg) GetDbEngine() EmDBEngin {
	if m != nil {
		return m.DbEngine
	}
	return EmDBEngin_DB_engine_invalid
}

func (m *PbSvrDBServiceResMsg) GetResMsgName() string {
	if m != nil {
		return m.ResMsgName
	}
	return ""
}

func (m *PbSvrDBServiceResMsg) GetResData() string {
	if m != nil {
		return m.ResData
	}
	return ""
}

func init() {
	proto.RegisterType((*PbSvrRegisterDBReqMsg)(nil), "ProtoMsg.PbSvrRegisterDBReqMsg")
	proto.RegisterType((*PbSvrRegisterDBResMsg)(nil), "ProtoMsg.PbSvrRegisterDBResMsg")
	proto.RegisterType((*PbSvrDBServiceReqMsg)(nil), "ProtoMsg.PbSvrDBServiceReqMsg")
	proto.RegisterType((*PbSvrDBServiceResMsg)(nil), "ProtoMsg.PbSvrDBServiceResMsg")
	proto.RegisterEnum("ProtoMsg.EmDBEngin", EmDBEngin_name, EmDBEngin_value)
}

func init() { proto.RegisterFile("db.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x41, 0x4f, 0xfa, 0x40,
	0x10, 0xc5, 0xff, 0x05, 0xf2, 0xa7, 0x8c, 0xa2, 0x58, 0x24, 0x22, 0x17, 0x49, 0x4f, 0xc4, 0x03,
	0x31, 0x78, 0xf1, 0xdc, 0xd4, 0x83, 0x51, 0x0c, 0x59, 0x3e, 0x40, 0xb3, 0xa5, 0x43, 0xb3, 0x09,
	0x6d, 0xed, 0xce, 0xda, 0xc4, 0x2f, 0xa4, 0x5f, 0xd3, 0xec, 0xb6, 0xb5, 0x62, 0x38, 0x70, 0xea,
	0x64, 0xde, 0xfc, 0x5e, 0xdf, 0x4b, 0x16, 0xec, 0x28, 0x9c, 0xbf, 0xc9, 0x4c, 0x65, 0x8e, 0xbd,
	0xd2, 0x9f, 0x25, 0xc5, 0x93, 0xfe, 0x66, 0xf7, 0x4e, 0x0a, 0x65, 0x29, 0x4c, 0x20, 0xe4, 0x84,
	0xe5, 0xec, 0x3e, 0xc3, 0x68, 0x15, 0xae, 0x0b, 0xc9, 0x30, 0x16, 0xfa, 0xc4, 0xf7, 0x18, 0xe6,
	0x4b, 0x8a, 0x9d, 0x05, 0xd8, 0x54, 0xc8, 0x40, 0xa4, 0xdb, 0x6c, 0x6c, 0x4d, 0xad, 0xd9, 0xc9,
	0xe2, 0x6a, 0x5e, 0x1b, 0xce, 0x0d, 0xe2, 0x71, 0xc2, 0xa7, 0x74, 0x9b, 0xb1, 0x2e, 0x15, 0x52,
	0x0f, 0xee, 0xc3, 0x01, 0x33, 0xd2, 0x66, 0x37, 0xd0, 0x96, 0xa8, 0x2a, 0x9f, 0x7e, 0xe3, 0xc3,
	0x50, 0x31, 0xad, 0xb8, 0x5f, 0x16, 0x5c, 0x1a, 0xd4, 0xf7, 0xd6, 0x28, 0x0b, 0xb1, 0xc1, 0x2a,
	0xc6, 0x1d, 0xf4, 0xa2, 0x30, 0xc0, 0x34, 0x16, 0x29, 0x1a, 0xfe, 0x6c, 0x31, 0x6c, 0x78, 0x4c,
	0x7c, 0xef, 0x51, 0x6b, 0xcc, 0x8e, 0x42, 0x33, 0xa0, 0x33, 0x85, 0x53, 0x89, 0x79, 0x90, 0x50,
	0x1c, 0xa4, 0x3c, 0xc1, 0x71, 0x6b, 0x6a, 0xcd, 0x7a, 0x0c, 0xa4, 0xf1, 0x7b, 0xe5, 0x09, 0x3a,
	0xd7, 0x60, 0xeb, 0x8b, 0x88, 0x2b, 0x3e, 0x6e, 0x1b, 0xb5, 0x2b, 0x31, 0xf7, 0xb9, 0xe2, 0x25,
	0x4c, 0x0d, 0xdc, 0xa9, 0x61, 0xaa, 0x60, 0xf7, 0xf3, 0x40, 0xd2, 0xa3, 0x3a, 0xee, 0x57, 0x69,
	0x1d, 0x5d, 0xe5, 0x57, 0x9a, 0xf6, 0xdf, 0x34, 0x65, 0x15, 0x2a, 0xab, 0x74, 0xea, 0x2a, 0xa4,
	0xab, 0xdc, 0xbe, 0x40, 0xef, 0xc7, 0xd3, 0x19, 0xc1, 0x85, 0xef, 0x55, 0xff, 0x0e, 0x44, 0x5a,
	0xf0, 0x9d, 0x88, 0x06, 0xff, 0x9c, 0x21, 0x9c, 0x37, 0x6b, 0x89, 0x91, 0xa0, 0x81, 0xb5, 0xbf,
	0x4c, 0x3e, 0x28, 0xdf, 0x0d, 0x5a, 0xe1, 0x7f, 0xf3, 0x5c, 0xee, 0xbf, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xe3, 0xbc, 0x18, 0x3c, 0x5f, 0x02, 0x00, 0x00,
}
